// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LCTRL k1  &ht LGUI k2  &ht LALT k3  &ht LSHFT k4
#define LTHRML(k1,k2,k3,k4) &hts LCTRL k1  &hts LGUI k2  &hts LALT k3  &hts LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LGUI k3  &ht LCTRL k4

/ {
    combos {
        compatible = "zmk,combos";

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
            layers = <0 1>;
        };

        bracket_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
            layers = <0 1>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
            layers = <0 1>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <10 9>;
            layers = <0 1>;
        };

        lf {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <7 9>;
            layers = <0 1>;
        };

        rba {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 10>;
            layers = <0 1>;
        };


        caret {
            bindings = <&kp CARET>;
            key-positions = <2 1>;
            layers = <0 1>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 17>;
            layers = <0 1>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <26 27>;
            layers = <0 1>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <2 4>;
            layers = <0 1>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 3>;
            layers = <0 1>;
        };

        tick {
            bindings = <&kp GRAVE>;
            key-positions = <34 35>;
            layers = <0 1>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 4>;
            layers = <0 1>;
        };

        dollar {
            bindings = <&kp DLLR>;
            key-positions = <4 5>;
            layers = <0 1>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <30 31>;
            layers = <0 1>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <31 33>;
            layers = <0 1>;
        };

        exam {
            bindings = <&kp EXCL>;
            key-positions = <25 26>;
            layers = <0 1>;
        };

        bslh {
            bindings = <&kp BSLH>;
            key-positions = <26 28>;
            layers = <0 1>;
        };
 
        sqt {
            bindings = <&kp SQT>;
            key-positions = <27 28>;
            layers = <0 1>;
        };

        dqt {
            bindings = <&kp DQT>;
            key-positions = <28 29>;
            layers = <0 1>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <31 20>;
            layers = <0 1>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <33 20>;
            layers = <0 1>;
        };

        up {
            bindings = <&kp UP>;
            key-positions = <8 19>;
            layers = <0 1>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <32 19>;
            layers = <0 1>;
        };

        lclk {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
            layers = <0 1>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <33 32>;
            layers = <0 1>;
        };

    macros {
	ltsh: lt_with_mod{
	   compatible = "zmk,behavior-macro-one-param";
	   #binding-cells = <1>;
	   bindings
		= <&macro_press &mo 1>
		, <&macro_param_1to1>
		, <&macro_press &kp MACRO_PLACEHOLDER>
    		, <&macro_pause_for_release>
		, <&macro_param_1to1>
    		, <&macro_release &kp MACRO_PLACEHOLDER>
    		, <&macro_release &mo 1>
    		;
	};
    };
    behaviors {
        hts: hold_tap_s {
            label = "hold_tap_s";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&ltsh>, <&kp>;
        };
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
       tdslh:tap_dance_slh{
            label = "tap_dance_slh";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp BSLH>;
        };
        tdm: tap_dance_minus {
            label = "tap_dance_minus";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp UNDER>, <&kp MINUS> ;
        };
	tds: tap_dance_sqt {
            label = "tap_dance_sqt";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };
	tdh:tap_dance_hash {
            label = "tap_dance_hash";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp HASH>, <&kp STAR>;
        };
        tdpar:tap_dance_par{
            label = "tap_dance_par";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
      	tdbkt:tap_dance_bkt{
            label = "tap_dance_bkt";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };
       tdbrc:tap_dance_brc{
            label = "tap_dance_brc";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };
       tdj:tap_dance_j{
            label = "tap_dance_j";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&ht LSHFT J>, <&kp J>;
        };
       tdk:tap_dance_k{
            label = "tap_dance_k";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&ht LALT K>, <&kp K>;
        };
       tdl:tap_dance_l{
            label = "tap_dance_l";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&ht LGUI L>, <&kp L>;
        };
       tdsemi:tap_dance_semi{
            label = "tap_dance_semi";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&ht LCTRL SEMI>, <&kp SEMI>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2 3>;
            then-layer = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q,      &kp W,     &kp E,    &kp R        &kp T       &kp  Y    &kp U      &kp I        &kp O    &kp P   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ;:       │
            HRML(A,        S,         D,         F)     &kp G         HRMR( H,      J,       K,           L)     &kp SEMI            
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA   &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lt 1 TAB  &lt 2 ENTER        &lt 3 SPACE &kp BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        func_layer {
            bindings =<
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │  4       │  5       │  6       │    +     │
            &kp F12    &kp F7     &kp F8     &kp F9  &kp PRINTSCREEN     &trans   &trans    &trans      &trans     &kp ESC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │     \    │    -     │   │    %     │  1       │  2       │ 3        │   -      │
            &kp F11    &kp F4      &kp F5      &kp F6  &kp SCROLLLOCK   &kp LSHFT  &kp LGUI   &kp LALT  &kp LCTRL   &kp MINUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│    F1    │   F2     │          │          │    "     │   │    0     │  7       │   8      │     9    │    .     │
            &kp F10    &kp F1      &kp F2    &kp F3  &kp PAUSE_BREAK     &trans   &trans    &trans      &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &none       &trans         &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };


        num_layer {
            bindings =<
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │   *      │  4       │  5       │  6       │    +     │
            &kp F11   &kp F12    &kp LG(V)  &kp LG(C)  &kp ESC        &kp KP_MULTIPLY &kp N4  &kp N5     &kp N6    &kp PLUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │   %      │  1       │  2       │ 3        │   -      │
           &kp LCTRL  &kp LEFT_GUI &kp LEFT_ALT &kp LEFT_SHIFT &trans         &kp PRCNT    &kp N1     &kp N2      &kp N3  &kp MINUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│    F1    │   F2     │          │          │          │   │    0     │  7       │   8      │     9    │     .    │
            &trans    &trans     &trans      &trans     &trans         &kp N0    &kp N7     &kp N8      &kp N9      &kp DOT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &trans     &none          &trans    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
  
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q,      &kp W,     &kp E,    &kp R        &kp T       &kp  Y    &kp U      &kp I        &kp O    &kp P   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ;:       │
            &kp A       &kp S      &kp D      &kp F     &kp G           &kp H      &kp J       &kp K     &kp L     &kp SEMI            
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA   &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp TAB  &kp ENTER        &none    &kp BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
